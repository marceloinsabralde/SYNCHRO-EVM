services:
  postgresql:
    image: postgres:16
    command: |
      -c fsync=off -c full_page_writes=off
      -c ssl=on
      -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
      -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
    environment:
      POSTGRES_USER: "${PGUSER?}"
      POSTGRES_PASSWORD: "${PGPASSWORD?}"
      EXTRA_USER_DBS:
        "${KUMARA_WEB_API_DB_USERNAME?}:${KUMARA_WEB_API_DB_PASSWORD?}|\
        ${TEST_KUMARA_WEB_API_DB_USERNAME?}:${TEST_KUMARA_WEB_API_DB_PASSWORD?}:${TEST_KUMARA_WEB_API_DB_USERNAME?}_{1..5}|\
        ${KUMARA_CORE_DB_USERNAME?}:${KUMARA_CORE_DB_PASSWORD?}|\
        ${TEST_KUMARA_CORE_DB_USERNAME?}:${TEST_KUMARA_CORE_DB_PASSWORD?}:${TEST_KUMARA_CORE_DB_USERNAME?}_{1..5}|\
        ${KUMARA_SEARCH_DB_USERNAME?}:${KUMARA_SEARCH_DB_PASSWORD?}|\
        ${TEST_KUMARA_SEARCH_DB_USERNAME?}:${TEST_KUMARA_SEARCH_DB_PASSWORD?}"
    volumes:
      - .docker/postgresql/health.sh:/health.sh:ro
      - .docker/postgresql/initdb.d:/docker-entrypoint-initdb.d:ro
    ports:
      - 127.0.0.1:5434:5432
    restart: unless-stopped
    healthcheck:
      test: /health.sh

  citus:
    image: citusdata/citus:postgres_16
    environment:
      POSTGRES_USER: "${PGUSER?}"
      POSTGRES_PASSWORD: "${PGPASSWORD?}"
      EXTRA_USER_DBS:
        "${KUMARA_EVENT_SOURCE_DB_USERNAME?}:${KUMARA_EVENT_SOURCE_DB_PASSWORD?}|\
        ${TEST_KUMARA_EVENT_SOURCE_DB_USERNAME?}:${TEST_KUMARA_EVENT_SOURCE_DB_PASSWORD?}:${TEST_KUMARA_EVENT_SOURCE_DB_USERNAME?}_{1..5}|"
    volumes:
      - .docker/postgresql/health.sh:/health.sh:ro
      - .docker/citus/initdb.d/extra-user-dbs.sh:/docker-entrypoint-initdb.d/extra-user-dbs.sh:ro
    ports:
      - 127.0.0.1:${CITUS_PGPORT:?}:5432
    restart: unless-stopped
    healthcheck:
      test: /health.sh

  elasticsearch: &elasticsearch
    image: elasticsearch:9.0.2
    environment: &elasticsearch_environment
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms64m -Xmx512m
      xpack.security.enabled: "true"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD?}"
    volumes:
      - .docker/elasticsearch/health.sh:/health.sh:ro
    ports:
      - 127.0.0.1:9200:9200
    restart: unless-stopped
    healthcheck:
      test: /health.sh
  elasticsearch_test:
    <<: *elasticsearch
    environment:
      <<: *elasticsearch_environment
      ELASTIC_PASSWORD: "${TEST_ELASTIC_PASSWORD?}"
      action.destructive_requires_name: "false"
    ports:
      - 127.0.0.1:9201:9200
