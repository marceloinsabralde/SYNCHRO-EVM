// <auto-generated />
using System;
using Kumara.WebApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kumara.WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250526110324_ChangeActivityActualDateColumnsToIncludeTime")]
    partial class ChangeActivityActualDateColumnsToIncludeTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kumara.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("ActualFinish")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("actual_finish");

                    b.Property<DateTimeOffset?>("ActualStart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("actual_start");

                    b.Property<Guid>("ControlAccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("control_account_id");

                    b.Property<Guid>("ITwinId")
                        .HasColumnType("uuid")
                        .HasColumnName("itwin_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTimeOffset?>("PlannedFinish")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("planned_finish");

                    b.Property<DateTimeOffset?>("PlannedStart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("planned_start");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reference_code");

                    b.HasKey("Id")
                        .HasName("pk_activities");

                    b.HasIndex("ControlAccountId")
                        .HasDatabaseName("ix_activities_control_account_id");

                    b.ToTable("activities", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.ControlAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly?>("ActualFinish")
                        .HasColumnType("date")
                        .HasColumnName("actual_finish");

                    b.Property<DateOnly?>("ActualStart")
                        .HasColumnType("date")
                        .HasColumnName("actual_start");

                    b.Property<Guid>("ITwinId")
                        .HasColumnType("uuid")
                        .HasColumnName("itwin_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateOnly?>("PlannedFinish")
                        .HasColumnType("date")
                        .HasColumnName("planned_finish");

                    b.Property<DateOnly?>("PlannedStart")
                        .HasColumnType("date")
                        .HasColumnName("planned_start");

                    b.Property<string>("ReferenceCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reference_code");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid")
                        .HasColumnName("task_id");

                    b.HasKey("Id")
                        .HasName("pk_control_accounts");

                    b.ToTable("control_accounts", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ITwinId")
                        .HasColumnType("uuid")
                        .HasColumnName("itwin_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("QuantityUnitOfMeasureId")
                        .HasColumnType("uuid")
                        .HasColumnName("quantity_unit_of_measure_id");

                    b.Property<Guid>("ResourceRoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("resource_role_id");

                    b.HasKey("Id")
                        .HasName("pk_materials");

                    b.HasIndex("QuantityUnitOfMeasureId")
                        .HasDatabaseName("ix_materials_quantity_unit_of_measure_id");

                    b.ToTable("materials", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.MaterialActivityAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uuid")
                        .HasColumnName("activity_id");

                    b.Property<Guid>("ITwinId")
                        .HasColumnType("uuid")
                        .HasColumnName("itwin_id");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uuid")
                        .HasColumnName("material_id");

                    b.Property<decimal>("QuantityAtComplete")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity_at_complete");

                    b.Property<Guid>("QuantityUnitOfMeasureId")
                        .HasColumnType("uuid")
                        .HasColumnName("quantity_unit_of_measure_id");

                    b.HasKey("Id")
                        .HasName("pk_material_activity_allocations");

                    b.HasIndex("ActivityId")
                        .HasDatabaseName("ix_material_activity_allocations_activity_id");

                    b.HasIndex("MaterialId")
                        .HasDatabaseName("ix_material_activity_allocations_material_id");

                    b.HasIndex("QuantityUnitOfMeasureId")
                        .HasDatabaseName("ix_material_activity_allocations_quantity_unit_of_measure_id");

                    b.ToTable("material_activity_allocations", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.ProgressEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uuid")
                        .HasColumnName("activity_id");

                    b.Property<Guid>("ITwinId")
                        .HasColumnType("uuid")
                        .HasColumnName("itwin_id");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uuid")
                        .HasColumnName("material_id");

                    b.Property<DateOnly>("ProgressDate")
                        .HasColumnType("date")
                        .HasColumnName("progress_date");

                    b.Property<decimal>("QuantityDelta")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity_delta");

                    b.Property<Guid>("QuantityUnitOfMeasureId")
                        .HasColumnType("uuid")
                        .HasColumnName("quantity_unit_of_measure_id");

                    b.HasKey("Id")
                        .HasName("pk_progress_entries");

                    b.HasIndex("ActivityId")
                        .HasDatabaseName("ix_progress_entries_activity_id");

                    b.HasIndex("MaterialId")
                        .HasDatabaseName("ix_progress_entries_material_id");

                    b.HasIndex("QuantityUnitOfMeasureId")
                        .HasDatabaseName("ix_progress_entries_quantity_unit_of_measure_id");

                    b.ToTable("progress_entries", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.ProgressSummary", b =>
                {
                    b.Property<Guid>("ITwinId")
                        .HasColumnType("uuid")
                        .HasColumnName("itwin_id");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uuid")
                        .HasColumnName("activity_id");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uuid")
                        .HasColumnName("material_id");

                    b.Property<Guid>("QuantityUnitOfMeasureId")
                        .HasColumnType("uuid")
                        .HasColumnName("quantity_unit_of_measure_id");

                    b.Property<decimal>("QuantityAtComplete")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity_at_complete");

                    b.Property<decimal>("QuantityToComplete")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity_to_complete");

                    b.Property<decimal>("QuantityToDate")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity_to_date");

                    b.HasKey("ITwinId", "ActivityId", "MaterialId", "QuantityUnitOfMeasureId")
                        .HasName("pk_progress_summaries");

                    b.ToTable((string)null);

                    b.ToView("progress_summaries", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.UnitOfMeasure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ITwinId")
                        .HasColumnType("uuid")
                        .HasColumnName("itwin_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("symbol");

                    b.HasKey("Id")
                        .HasName("pk_units_of_measure");

                    b.ToTable("units_of_measure", (string)null);
                });

            modelBuilder.Entity("Kumara.Models.Activity", b =>
                {
                    b.HasOne("Kumara.Models.ControlAccount", "ControlAccount")
                        .WithMany()
                        .HasForeignKey("ControlAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_activities_control_accounts_control_account_id");

                    b.Navigation("ControlAccount");
                });

            modelBuilder.Entity("Kumara.Models.Material", b =>
                {
                    b.HasOne("Kumara.Models.UnitOfMeasure", "QuantityUnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("QuantityUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_materials_units_of_measure_quantity_unit_of_measure_id");

                    b.Navigation("QuantityUnitOfMeasure");
                });

            modelBuilder.Entity("Kumara.Models.MaterialActivityAllocation", b =>
                {
                    b.HasOne("Kumara.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_material_activity_allocations_activities_activity_id");

                    b.HasOne("Kumara.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_material_activity_allocations_materials_material_id");

                    b.HasOne("Kumara.Models.UnitOfMeasure", "QuantityUnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("QuantityUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_material_activity_allocations_units_of_measure_quantity_uni");

                    b.Navigation("Activity");

                    b.Navigation("Material");

                    b.Navigation("QuantityUnitOfMeasure");
                });

            modelBuilder.Entity("Kumara.Models.ProgressEntry", b =>
                {
                    b.HasOne("Kumara.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_progress_entries_activities_activity_id");

                    b.HasOne("Kumara.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_progress_entries_materials_material_id");

                    b.HasOne("Kumara.Models.UnitOfMeasure", "QuantityUnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("QuantityUnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_progress_entries_units_of_measure_quantity_unit_of_measure_");

                    b.Navigation("Activity");

                    b.Navigation("Material");

                    b.Navigation("QuantityUnitOfMeasure");
                });

            modelBuilder.Entity("Kumara.Models.ProgressSummary", b =>
                {
                    b.OwnsMany("Kumara.Models.RecentProgressEntry", "RecentProgressEntries", b1 =>
                        {
                            b1.Property<Guid>("ProgressSummaryITwinId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("ProgressSummaryActivityId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("ProgressSummaryMaterialId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("ProgressSummaryQuantityUnitOfMeasureId")
                                .HasColumnType("uuid");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("__synthesized_ordinal");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "id");

                            b1.Property<DateOnly>("ProgressDate")
                                .HasColumnType("date")
                                .HasAnnotation("Relational:JsonPropertyName", "progress_date");

                            b1.Property<decimal>("QuantityDelta")
                                .HasColumnType("numeric")
                                .HasAnnotation("Relational:JsonPropertyName", "quantity_delta");

                            b1.HasKey("ProgressSummaryITwinId", "ProgressSummaryActivityId", "ProgressSummaryMaterialId", "ProgressSummaryQuantityUnitOfMeasureId", "__synthesizedOrdinal");

                            b1.ToTable((string)null);

                            b1.ToView("progress_summaries");

                            b1.ToJson("recent_progress_entries");

                            b1.WithOwner()
                                .HasForeignKey("ProgressSummaryITwinId", "ProgressSummaryActivityId", "ProgressSummaryMaterialId", "ProgressSummaryQuantityUnitOfMeasureId")
                                .HasConstraintName("fk_recent_progress_entry_progress_summaries_progress_summary_i");
                        });

                    b.Navigation("RecentProgressEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
